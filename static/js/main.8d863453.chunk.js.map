{"version":3,"sources":["Components/Calendar/index.js","App.js","index.js"],"names":["Calendar","apiEndPoint","a","console","log","axios","require","data","JSON","stringify","query","selectedYear","selectedMonth","config","method","url","headers","then","response","setCurrentDays","setcurrentIndex","weekday","setIsLoading","useState","currentDays","currentIndex","isLoading","months","years","setSelectedMonth","setSelectedYear","year","push","useEffect","daysBeforeStart","i","className","daysInMonth","index","currentDay","holiday","weekdayStrNp","style","textAlign","position","tithiStrNp","adDay","height","display","justifyContent","alignItems","onClick","e","onDayClick","bsDayNp","length","totalDaysInMonth","weekdaysRow","days","forEach","row","daysinmonth","map","d","htmlFor","name","id","value","onChange","target","item","width","padding","borderRadius","margin","borderTop","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d863453.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './Calendar.css';\r\n\r\nconst Calendar = () => {\r\n\r\n    const apiEndPoint = async () => {\r\n\r\n\r\n        console.log(\"called\")\r\n\r\n        var axios = require('axios');\r\n        var data = JSON.stringify({\r\n            query: `{\r\n                        dates(bsYear: ${selectedYear}, bsMonth: ${selectedMonth}) {\r\n                            bsDayNp\r\n                            bsDay\r\n                            adDay\r\n                            bsMonth\r\n                            bsMonthNp\r\n                            weekday\r\n                            bsYear\r\n                            bsYearNp\r\n                            adYear\r\n                            isHoliday\r\n                            weekdayStrNp\r\n                            weekdayStrEn\r\n                            adMonthStrEn\r\n                            adMonth\r\n                            bsMonthStrNp\r\n                            bsMonthStrEn\r\n                            bsMonth\r\n                            weekdayStrNp\r\n                            events {\r\n                                strEn\r\n                                strNp\r\n                                isHoliday\r\n                            }\r\n                            tithiCode\r\n                            tithiStrNp\r\n                            tithiStrEn\r\n                        }\r\n                    }`,\r\n            // variables: {}\r\n        });\r\n\r\n        var config = {\r\n            method: 'post',\r\n            url: 'https://api.saralpatro.com/graphql',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            data: data\r\n        };\r\n\r\n       await axios(config)\r\n            .then(function (response) {\r\n                // setApi(response.data.data['dates']);\r\n                setCurrentDays(response.data.data['dates']);\r\n                \r\n                console.log(response.data);\r\n                setcurrentIndex(response.data.data['dates'][0].weekday);\r\n                console.log(response.data);\r\n                setIsLoading(false);\r\n            })\r\n\r\n            console.log(\"Dey Dana done\")\r\n\r\n        return \"done\";\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // const currentDays = [];\r\n\r\n    const [currentDays, setCurrentDays] = useState([]);\r\n    const [currentIndex, setcurrentIndex] = useState(0);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const months = ['वैशाख', 'जेष्ठ', 'असार', 'श्रावण', 'भदौ', 'आश्विन', 'कार्तिक', 'मंसिर', 'पौष', 'माघ', 'फाल्गुण', 'चैत्र']\r\n    const years = [];\r\n\r\n    const ENG_DAYS = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n    const NEP_DAYS = ['आइत', 'सोम', 'मंगल', 'बुध', 'बिही', 'शुक्र', 'शनि'];\r\n\r\n    const [selectedMonth, setSelectedMonth] = useState(1);\r\n    const [selectedYear, setSelectedYear] = useState(2078);\r\n\r\n\r\n    const handleMonthChange = (e) => {\r\n        console.log(e.target.value);\r\n        setSelectedMonth(e.target.value);\r\n        \r\n    }\r\n\r\n    const handleYearChange = (e) => {\r\n        console.log(e.target.value);\r\n        setSelectedYear(e.target.value);\r\n    }\r\n\r\n\r\n    for (let year = 1975; year < 2100; year++) {\r\n        years.push(year)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n\r\n        apiEndPoint();\r\n\r\n    }, [selectedMonth, selectedYear,])\r\n\r\n\r\n\r\n    let daysBeforeStart = [];\r\n    // let currentIndex = currentDays[0].weekday;\r\n\r\n\r\n\r\n    for (let i = 0; i < currentIndex+1 && currentIndex < 6; i++) {\r\n        daysBeforeStart.push(<td className=\"calendar-day\" key={`empty${i}`}>{\"\"}</td>);\r\n    }\r\n\r\n\r\n    let daysInMonth = [];\r\n    for (let index = 0; index < currentDays.length; index++) {\r\n      let currentDay = index === 6 ? \"today\" : \"\";\r\n    //   let selectedClass = (index === this.state.selectedDay ? \"selected-day\" : \"others\")\r\n        let selectedClass = 'selected';\r\n        \r\n      let holiday = currentDays[index].weekdayStrNp === \"शनिबार\" ? \"holiday\" : \"otherday\";\r\n        \r\n\r\n      daysInMonth.push(\r\n          <td key={`index${index}`} className='calendar-day'>\r\n              \r\n\r\n                \r\n                  <div style={{\r\n                    textAlign: 'left', position:'relative',\r\n\r\n\r\n                  }}>\r\n                      \r\n                <span className=\"tithi\">\r\n                    {currentDays[index].tithiStrNp}\r\n                </span>\r\n\r\n                <span className=\"eng-date\">\r\n                    {currentDays[index].adDay}\r\n                </span>\r\n                  </div>\r\n\r\n\r\n              <div style={{ height:'100%', display:'flex', justifyContent:'center', alignItems:'center'}}\r\n            className={`${currentDay} ${selectedClass}`}\r\n          \r\n            onClick={e => {\r\n              this.onDayClick(e, index);\r\n            }}\r\n              >\r\n\r\n\r\n                  \r\n\r\n            <h2 className={holiday} style={{textAlign:'center'}}\r\n          >\r\n            {currentDays[index].bsDayNp}\r\n                  </h2>\r\n          </div>\r\n        </td>\r\n      );\r\n    }\r\n\r\n\r\n       var totalDaysInMonth = [...daysBeforeStart, ...daysInMonth];\r\n    let weekdaysRow = [];\r\n    let days = [];\r\n\r\n    totalDaysInMonth.forEach((row, i) => {\r\n      if (i % 7 !== 0) {\r\n        days.push(row);\r\n      } else {\r\n        weekdaysRow.push(days);\r\n        days = [];\r\n        days.push(row);\r\n      }\r\n      if (i === totalDaysInMonth.length - 1) {\r\n        // let insertRow = days.slice();\r\n        weekdaysRow.push(days);\r\n      }\r\n    });\r\n\r\n    let daysinmonth = weekdaysRow.map((d, i) => {\r\n      return <tr key={i}>{d}</tr>;\r\n    });\r\n\r\n\r\n\r\n    \r\n    return (\r\n        <div className=\"mainContainer\">\r\n            { isLoading?<h6 style={{textAlign:'center'}}>Loading ...</h6>:<p></p> }\r\n            <h1 className=\"header\">Saral Patro </h1>\r\n            <div className=\"sub-header\">\r\n                <div className=\"flex-d\">\r\n                    <h2>{ months[selectedMonth-1]+\", \"+ selectedYear}</h2>\r\n                </div>\r\n                <div>\r\n                    <span className=\"options\">\r\n                        <label htmlFor=\"years\">वर्ष रोज्नुहोस्:</label>\r\n                        <select name=\"years\" id=\"years\" className=\"selectOption\" value={selectedYear} onChange={handleYearChange} >\r\n                            {\r\n                                years.map((item, index) => <option value={item} key={index}>{ item }</option>)\r\n                            }\r\n                        </select>\r\n                        </span>\r\n                    <span className=\"options\">\r\n                        <label htmlFor=\"months\">महिना रोज्नुहोस्:</label>\r\n                        <select name=\"months\" id=\"months\" className=\"selectOption\" value={selectedMonth} onChange={handleMonthChange}>\r\n                            {\r\n                                months.map((item, index) => <option value={index+1} key={index}>{ item }</option>)\r\n                            }\r\n                            </select>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n{/*             \r\n            {\r\n                currentDays.map((item, index) => <div>\r\n                    {item.bsDayNp}\r\n                </div>)\r\n            } */}\r\n\r\n        <table style={{\r\n            width: '100%',\r\n            padding: \"10px\",\r\n            borderRadius:'12px',\r\n            // boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n          }}>\r\n              <thead style={{margin:\"20px 20px\"}}>\r\n                <tr className=\"weekdays\">\r\n                {ENG_DAYS.map((item, index) => <th key={index} style={{borderTop:'1px solid #dee2e6'}}> {item}</th>)}\r\n              </tr>\r\n              <tr className=\"weekdays\">\r\n                {NEP_DAYS.map((item, index) => <th key={index}> {item}</th>)}\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                        {\r\n                            daysinmonth\r\n                        }\r\n            </tbody>\r\n\r\n            </table>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calendar\r\n","import './App.css';\nimport Calendar from './Components/Calendar';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calendar />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}